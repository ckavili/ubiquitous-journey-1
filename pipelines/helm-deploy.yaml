apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: helm-deploy-pipeline
spec:
  workspaces:
    - name: shared-workspace
    - name: argocd-env-secret
  params:
  - name: APPLICATION_NAME
    type: string
    default: ""
  - name: GIT_URL
    type: string
    default: ""
  - name: GIT_REVISION
    type: string
    default: "master"
  - name: GIT_REF
    type: string
    default: "refs/heads/master"
  - name: GIT_SHORT_REVISION
    type: string
    default: ""
  - name: GIT_BRANCH
    type: string
    default: "master"
  - name: BUILD_NAMESPACE
    type: string
    default: "labs-ci-cd"
  - name: DEV_NAMESPACE
    type: string
    default: "labs-dev"
  - name: TEST_NAMESPACE
    type: string
    default: "labs-test"
  - name: APP_OF_APPS_DEV_KEY
    type: string
    default: ""
  - name: APP_OF_APPS_TEST_KEY
    type: string
    default: ""
  tasks:
    - name: fetch-cicd-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "https://github.com/eformat/pb-ci-cd.git"
        - name: revision
          value: "main"
        - name: subdirectory
          value: "$(params.APPLICATION_NAME)/cicd"
        - name: deleteExisting
          value: "true"

    - name: helm-argocd-apps-master # deploy to dev + test
      conditions:
      - conditionRef: is-equal
        params:
          - name: left
            value: "master"
          - name: right
            value: "$(params.GIT_BRANCH)"
      taskRef:
        name: helm-template-from-source
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: charts_dir
          value: "$(params.APPLICATION_NAME)/cicd/applications/deployment"
        - name: values_file
          value: argo-app-of-apps.yaml
        - name: release_name
          value: my
        - name: target_namespace
          value: "$(params.BUILD_NAMESPACE)"
        - name: overwrite_values
          value: ""
      runAfter:
        - fetch-cicd-repository

    - name: helm-argocd-apps-branches # only deploy to dev, fullname includes branch
      conditions:
      - conditionRef: is-not-equal
        params:
          - name: left
            value: "master"
          - name: right
            value: "$(params.GIT_BRANCH)"
      taskRef:
        name: helm-template-from-source
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: charts_dir
          value: "$(params.APPLICATION_NAME)/cicd/applications/deployment"
        - name: values_file
          value: values-applications.yaml
        - name: release_name
          value: my
        - name: target_namespace
          value: "$(params.BUILD_NAMESPACE)"
        - name: overwrite_values
          value: "applications.$(params.APP_OF_APPS_DEV_KEY).enabled=true,applications.$(params.APP_OF_APPS_DEV_KEY).values.fullnameOverride=$(params.APPLICATION_NAME)-$(params.GIT_BRANCH),applications.$(params.APP_OF_APPS_DEV_KEY).name=$(params.APPLICATION_NAME)-$(params.GIT_BRANCH),applications.$(params.APP_OF_APPS_DEV_KEY).source_ref=$(params.GIT_REVISION),applications.$(params.APPLICATION_NAME).values.image_version=$(params.GIT_SHORT_REVISION),applications.$(params.APPLICATION_NAME).values.image_namespace=$(params.DEV_NAMESPACE)"
      runAfter:
        - fetch-cicd-repository

    - name: argocd-sync-application-branches
      retries: 3
      taskRef:
        name: argocd-sync-and-wait
      workspaces:
      - name: argocd-env-secret
        workspace: argocd-env-secret
      params:
      - name: application-name
        value: "-l app.kubernetes.io/instance=$(params.APPLICATION_NAME)-$(params.GIT_BRANCH)" # sync by label, multiple apps different namespaces synced good thing
      - name: flags
        value: --insecure
      - name: revision
        value: "$(params.GIT_REVISION)"
      runAfter:
      - helm-argocd-apps-branches

    - name: argocd-sync-application-master
      retries: 3
      taskRef:
        name: argocd-sync-and-wait
      workspaces:
      - name: argocd-env-secret
        workspace: argocd-env-secret
      params:
      - name: application-name
        value: "-l app.kubernetes.io/instance=$(params.APPLICATION_NAME)" # sync by label, multiple apps different namespaces synced good thing
      - name: flags
        value: --insecure
      - name: revision
        value: "$(params.GIT_REVISION)"
      runAfter:
      - helm-argocd-apps-master
