apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-commit-argo-versions
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: build-tool
spec:
  description: >-
    This Task can be used to change app-of-apps versions

  workspaces:
    - name: output
    - name: git-auth-secret
  params:
    - name: IMAGE
      type: string
      description: Maven base image
      default: quay.io/eformat/jenkins-agent-mvn-mandrel:latest
    - name: WORK_DIRECTORY
      description: Directory to start build in (handle multiple branches)
      type: string
    - name: GIT_REPO_URL
      type: string
      description: Git repo url
      default: "github.com/eformat/pb-ci-cd.git"
    - name: GIT_USER_NAME
      type: string
      description: |
        Git user name for performing git operation.
      default: "Tekton"
    - name: GIT_USER_EMAIL
      type: string
      description: |
        Git user email for performing git operation.
      default: "tekton@rht-labs.bot.com"
    - name: GIT_TAG
      description: The Git Tag (branch,tag,revision) to set in app of apps values
      type: string
      default: "master"
    - name: HTTPPROXY
      description: git HTTP proxy server for non-SSL requests
      type: string
      default: ""
    - name: HTTPSPROXY
      description: git HTTPS proxy server for SSL requests
      type: string
      default: ""
    - name: NOPROXY
      description: git no proxy - opt out of proxying HTTP/HTTPS requests
      type: string
      default: ""
    - name: VERBOSE
      description: log the commands used during execution
      type: string
      default: "true"
    - name: ARGOCD_CONFIG_REPO_PATH
      description: The App Of Apps file path
      type: string
      default: "applications/deployment/argo-app-of-apps.yaml"
    - name: APP_OF_APPS_DEV_KEY
      type: string
    - name: APP_OF_APPS_TEST_KEY
      type: string
  steps:
    - name: run-git-commit-versions
      image: $(params.IMAGE)
      workingDir: $(workspaces.output.path)/$(params.WORK_DIRECTORY)
      script: |
        #!/usr/bin/env bash
        set -eu -o pipefail

        if [[ "$(params.verbose)" == "true" ]] ; then
          set -x
        fi

        test -z "$(params.HTTPROXY)" || export HTTP_PROXY=$(params.httpProxy)
        test -z "$(params.HTTPSPROXY)" || export HTTPS_PROXY=$(params.httpsProxy)
        test -z "$(params.NOPROXY)" || export NO_PROXY=$(params.noProxy)

        # Setting up the config for the git
        git config --global user.email "$(params.GIT_USER_EMAIL)"
        git config --global user.name "$(params.GIT_USER_NAME)"
        git config --global push.default simple

        # Setup app suite values
        yq w -i ${ARGOCD_CONFIG_REPO_PATH} "applications.pet_battle_suite.values.applications(name==${APP_OF_APPS_DEV_KEY}).source_ref" ${GIT_TAG}
        yq w -i ${ARGOCD_CONFIG_REPO_PATH} "applications.pet_battle_suite.values.applications(name==${APP_OF_APPS_DEV_KEY}).image_version" ${GITHUB_TAG::7}
        yq w -i ${ARGOCD_CONFIG_REPO_PATH} "applications.pet_battle_suite.values.applications(name==${APP_OF_APPS_TEST_KEY}).source_ref" ${GIT_TAG}
        yq w -i ${ARGOCD_CONFIG_REPO_PATH} "applications.pet_battle_suite.values.applications(name==${APP_OF_APPS_TEST_KEY}).image_version" ${GITHUB_TAG::7}

        # Auto commit
        git add ${ARGOCD_CONFIG_REPO_PATH}
        git commit -m "ðŸš€ AUTOMATED COMMIT - Deployment new app version ${GIT_TAG} ðŸš€" || rc=$?
        git remote set-url origin  https://foobar:$(cat $(workspaces.git-auth-secret.path)/password@${GIT_REPO_URL}
        git push -u origin $(git branch --show-current)

        EXIT_CODE="$?"
        if [ "$EXIT_CODE" != 0 ]
        then
          exit $EXIT_CODE
        fi
