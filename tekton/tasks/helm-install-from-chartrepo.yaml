# This Task will do a helm upgrade based on the given helm repo and chart
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: helm-install-from-chartrepo
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: helm
spec:
  description: >-
    This task will upgrade/install a helm chart from a chartrepo into your Kubernetes /
    OpenShift Cluster using Helm

  params:
    - name: helm_repo_name
      description: "Specify a specific helm repo name"
    - name: helm_repo_url
      description: "Specify a specific helm repo url"
    - name: chart_name
      description: "Specify chart name that will be deployed"
    - name: release_version
      description: The helm release version in semantic versioning format
      default: ""
    - name: release_name
      description: The helm release name
      default: "helm-release"
    - name: release_namespace
      description: The helm release namespace
      default: ""
    - name: overwrite_values
      description: "Specify the values you want to overwrite, comma separated: autoscaling.enabled=true,replicas=1"
      default: "foo=bar"
    - name: helm_version
      description: "Specify a specific helm version"
      default: "latest"
  steps:
    - name: upgrade-from-repo
      image: quay.io/eformat/openshift-helm:$(inputs.params.helm_version)
      script: |
        set -ex
        echo "current installed helm releases"
        helm list --namespace "$(inputs.params.release_namespace)"
        echo "adding helm repo..."
        helm repo add "$(inputs.params.helm_repo_name)" "$(inputs.params.helm_repo_url)"
        echo "adding updating repo..."
        helm repo update
        echo "installing helm chart..."
        if [ ! -z $(inputs.params.release_version) ]; then
          helm upgrade --wait --install --namespace "$(inputs.params.release_namespace)" $(inputs.params.release_name) $(inputs.params.helm_repo_name)/$(inputs.params.chart_name) --debug --set "$(inputs.params.overwrite_values)" --set "image_name=$(inputs.params.release_name)-$(inputs.params.chart_name)" --version $(inputs.params.release_version) --skip-crds
        else
          helm upgrade --wait --install --namespace "$(inputs.params.release_namespace)" $(inputs.params.release_name) $(inputs.params.helm_repo_name)/$(inputs.params.chart_name) --debug --set "$(inputs.params.overwrite_values)" --set "image_name=$(inputs.params.release_name)-$(inputs.params.chart_name)" --skip-crds
        fi
